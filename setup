if [ -n "$BASH_SOURCE" ]; then
	export ROOT=$(readlink -f $(dirname "$BASH_SOURCE"))
elif [ -n "$ZSH_NAME" ]; then
	export ROOT=$(readlink -f $(dirname "$0"))
else
	export ROOT=$(readlink -f ${PWD})
fi

export PATH=$PATH:$ROOT/scripts
SOURCEDIR="$ROOT/sources/yocto"

source $ROOT/sources/yocto/oe-init-build-env "$@"

metas=$(find "$SOURCEDIR" -path "*/conf/layer.conf")

# add meta-xilinx path to bblayer.conf file
for meta in ${metas}; do
	metaloc=${meta%/conf/layer.conf}
	result=$(grep -o "$metaloc" "conf/bblayers.conf")
	if [ -z "$result" ]; then
		cat >> "conf/bblayers.conf" <<EOF
# Generated by Yocto setup script, do not modify
BBLAYERS += "$metaloc"
EOF
	fi
done

# include override.conf from local.conf
result=$(grep -x "include conf/override.conf" "conf/local.conf")
if [ -z "$result" ]; then
	cat >> "conf/local.conf" <<EOF
# Generated by Yocto setup script, do not modify
include conf/override.conf
EOF
fi

# generate override.conf
if [ ! -f "conf/override.conf" ]; then
    cat > "conf/override.conf" <<EOF
# Generated by Yocto setup script, do not modify
SSTATE_DIR = "$ROOT/sstate-cache"
DL_DIR = "$ROOT/downloads"
PACKAGE_CLASSES = "package_rpm"
PREFERRED_PROVIDER_virtual/kernel = "linux-xlnx"
PREFERRED_PROVIDER_virtual/bootloader = "u-boot-xlnx"
DISTRO = "petalinux"

TCMODE = "external-xilinx"
XILINX_VER_MAIN = "2016.1"
# Path to Xilinx SDK toolchain
EXTERNAL_TOOLCHAIN_zynq = "/proj/xbuilds/2016.1_daily_latest/installs/lin64/SDK/2016.1/gnu/aarch32/lin/gcc-arm-linux-gnueabi"
EXTERNAL_TOOLCHAIN_microblaze = "/proj/xbuilds/2016.1_daily_latest/installs/lin64/SDK/2016.1/gnu/microblaze/linux_toolchain/lin32_le"
EXTERNAL_TOOLCHAIN_aarch64 = "/proj/xbuilds/2016.1_daily_latest/installs/lin64/SDK/2016.1/gnu/aarch64/lin/aarch64-linux"

EOF
fi

